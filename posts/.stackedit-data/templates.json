{"id":"templates","type":"data","data":{"aMzUbwfHVTL22jRb":{"name":"New template","value":"<!-- Specify your Handlebars template here.\n\nThe following JavaScript context will be passed to the template:\n\n{\n  files: [{\n    name: 'The filename',\n    content: {\n      text: 'The file content',\n      html: '<p>The file content</p>',\n      yamlProperties: 'The file properties in YAML format',\n      properties: {\n        // Computed file properties object\n      },\n      toc: [\n        // Table Of Contents tree\n      ]\n    }\n  }]\n}\n\n\nAs an example:\n\n<html><body>{{{files.0.content.html}}}</body></html>\n\nwill produce:\n\n<html><body><p>The file content</p></body></html>\n\n\nYou can use Handlebars built-in helpers and the custom StackEdit ones:\n\n{{#tocToHtml files.0.content.toc}}{{/tocToHtml}} will produce a clickable TOC.\n\n{{#tocToHtml files.0.content.toc 3}}{{/tocToHtml}} will limit the TOC depth to 3.\n-->\n\n","helpers":"/* Add your custom Handlebars helpers here.\n\nFor example:\n\nHandlebars.registerHelper('transform', function (options) {\n  var result = options.fn(this);\n  return new Handlebars.SafeString(\n    result.replace(/<pre[^>]*>/g, '<pre class=\"prettyprint\">')\n  );\n});\n\nThen use the helper in your template:\n\n{{#transform}}{{{files.0.content.html}}}{{/transform}}\n*/\n\n"}},"hash":506445547}